---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/resume/favicon.png" />
		<link rel="stylesheet" href="https://cdn.linearicons.com/free/1.0.0/icon-font.min.css">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Header />
		<slot />
		<Footer />
	</body>
</html>
<style is:global>
	:root {
		--gap: 1rem;
		--border-radius: 26% 74% 28% 72% / 65% 32% 68% 35%;
		--border-color: rgba(0,0,0,0.15);
		--font-family-sans: "Oxygen Regular", sans-serif;
		--font-family-cursive: "Caveat Regular", cursive;

		--clr-light: hsl(0, 20%, 75%);
		--clr-lighter: hsl(0, 30%, 85%);
		--clr-lightest: hsl(0, 50%, 97%);
		--clr-dark: hsl(275, 5%, 20%);
		--clr-darker: hsl(275, 5%, 16%);
		--clr-darkest: hsl(275, 5%, 13%);
		--clr-rose: hsl(342, 75%, 61%);
		--clr-leaf: hsl(167, 87%, 49%);
		--clr-mint: hsl(167, 100%, 93%);

		--clr-text: var(--clr-light);
		--clr-heading: var(--clr-lightest);
		--clr-subheading: var(--clr-lighter);
		--clr-background: var(--clr-darkest);
		--clr-accent: var(--clr-leaf);
	}
	@font-face {
		font-family: "Oxygen Regular";
		src: local("Oxygen Regular"),
			url("../fonts/Oxygen-Regular.ttf");
	}
	@font-face {
		font-family: "Caveat Regular";
		src: local("Caveat Regular"),
			url("../fonts/Caveat-Regular.ttf");
	}
	body {
		display: flex;
		flex-direction: column;
		margin: 0;
		font-family: var(--font-family-sans);
		font-size: clamp(1rem, 2vw, 1.15rem);
		color: var(--clr-text);
		background-color: var(--clr-background);
		min-block-size: 100svh;
	}
	main {
		flex-grow: 1;
	}
	button {
		font-family: var(--font-family-sans);
		font-size: clamp(0.85rem, 1vw, 1rem);
		cursor: pointer;
	}
	h1 {
		font-size: clamp(2.5rem, 3vw, 3rem);
		font-family: var(--font-family-cursive);
	}
	h2 {
		font-size: clamp(1.45rem, 1vw, 1.65rem);
	}
	abbr[title] {
		cursor: help;
	}
	@media (max-width: 1366px) {
		abbr {
			text-decoration: none;
		}
		abbr[title]::after {
			content: " (" attr(title) ")";
		}

	}
	a:any-link,
	a:-webkit-any-link,
	a:visited {
		color: var(--clr-accent);
	}
	:where(h1, h2, h3, h4, h5, h6) {
		color: var(--clr-heading);
	}
	:where(h1, h2, h3, h4, h5, h6, p) {
		max-inline-size: 60ch;
	}
	:focus-visible {
		outline: 2px solid var(--clr-rose);
	}
	::selection {
		background-color: var(--clr-accent);
		color: var(--clr-darkest);
	}
	::backdrop {
		background-color: rgba(0, 0, 0, 0.5);
		backdrop-filter: blur(2px);
	}
	:modal {
		padding: 0;
		border: 0;
		border-radius: 10px;
		background-color: var(--clr-dark);
	}
	@media (min-width: 768px) {
		:modal {
			max-inline-size: calc((768px - 6px) - 2em);
		}
	}
	button {
		font-family: var(--font-family-sans);
	}
	button > * {
		pointer-events: none;
	}
	ul:not(.ul) {
    padding-inline-start: 0;
  }
  ul.ul li {
    font-size: clamp(0.9rem, 1vw, 1rem);
    margin-bottom: 1em;
    color: var(--clr-light);
		max-inline-size: 60ch;
  }
  ul.ul.list-responsibilities > li::marker {
    content: "â˜•  ";
  }
	ul.ul.list-achievements > li::marker {
    content: "ðŸ’¯  ";
  }
	ul.ul > li > ul.ul {
		margin-block-start: 1em;
	}
	ul.ul > li > ul.ul > li {
		font-size: 0.75rem;
	}
	ul.ul > li > ul.ul li::marker {
		content: "â˜¼  ";
		color: var(--clr-lightest);
	}
  ul.tags {
		position: sticky;
		top: 6.5rem;
    padding: 0;
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: calc(var(--gap) * 0.25);
  }
  ul.tags li {
    font-size: clamp(0.75rem, 1vw, 0.8rem);
    background-color: var(--clr-darker);
    color: var(--clr-accent);
    padding: 0.015rem 0.45rem;
    border-radius: 3px;
  }
</style>
